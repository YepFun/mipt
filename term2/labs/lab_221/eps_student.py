import numpy as np

# Данные из таблицы
P = np.array([41, 71, 116, 160, 201])  # давление, торр
k = np.array([-2.894, -1.619, -0.983, -0.7123, -0.5721])  # коэффициенты, 10^-3 c^-1
D = np.array([9.6, 5.3, 3.2, 2.4, 1.89])  # коэффициенты D, см^2/c
inv_P = 1 / P  # инверсии давления, торр^-1

# Константы
k_prime = 398  # значение k'
t = 3.18  # коэффициент для 95% доверительного уровня
n = len(P)  # количество точек данных

# Шаг 1: Вычисление средней величины 1/P
mean_inv_P = np.mean(inv_P)

# Шаг 2: Вычисление суммы квадратов отклонений
sum_residuals = np.sum((D - k_prime * inv_P)**2)

# Шаг 3: Вычисление знаменателя для s_k'
denominator = np.sum((inv_P - mean_inv_P)**2)

# Шаг 4: Вычисление s_k'
s_k_prime = np.sqrt(sum_residuals / (n - 2)) / np.sqrt(denominator)

# Шаг 5: Вычисление относительной погрешности ε_k'
epsilon_k_prime = (t * s_k_prime / k_prime) * 100

# Вывод результатов
print(f"Относительная погрешность ε_k' = {epsilon_k_prime:.4f}%")
