import numpy as np
import matplotlib.pyplot as plt

# Исходные данные
T = np.array([20.05, 21.005, 22.055, 23.03, 24.00, 25.025, 26.00, 27.00, 
              28.015, 29.01, 30.03, 31.005, 32.06, 33.03, 34.03, 35.005, 
              35.985, 37.005, 37.995, 39.015, 40.005])  # Температура в °C

P = np.array([4482.7776, 4963.0752, 5224.57056, 5682.63216, 6104.22672, 
              6533.82624, 6868.25568, 7306.7496, 7698.99264, 8196.1896,
              8688.93936, 8917.52544, 9552.5856, 10018.65216, 10524.74352,
              11327.90784, 11680.12608, 12337.42224, 13233.08832, 13860.14352,
              14364.456])  # Давление (Па)

dT = np.array([0.045, 0.005, 0.015, 0.01, 0.01, 0.005, 0.01, 0.0, 
               0.025, 0.0, 0.01, 0.005, 0.02, 0.01, 0.01, 0.005,
               0.005, 0.005, 0.005, 0.005, 0.005])  # Погрешность температуры

dP = np.array([112.06944, 71.1552, 44.472, 9.48736, 61.66784, 27.27616, 
               51.58752, 72.34112, 20.7536, 18.38176, 7.70848, 23.12544, 
               28.46208, 27.27616, 22.53248, 55.73824, 41.5072, 55.73824, 
               59.296, 20.16064, 20.7536])  # Погрешность давления

# Перевод температуры в Кельвины
T_K = T + 273.15  # Температура в Кельвинах
inv_T_K = 1 / T_K  # 1/T_K
lnP = np.log(P)  # lnP

# Расчет погрешностей
dT_K = dT  # Погрешность температуры в Кельвинах
d_inv_T_K = dT_K / (T_K**2)  # Погрешность для 1/T_K
d_lnP = dP / P  # Погрешность для lnP (относительная погрешность)

# График 1: P(T) с погрешностями
plt.figure(figsize=(8, 6))

# Переименование осей
P_kPa = P * 1e-3
dP_kPa = dP * 1e-3

plt.errorbar(T, P_kPa, xerr=dT, yerr=dP_kPa, fmt='o', markersize=6, ecolor='red', capsize=3, label="Экспериментальные данные")

# Установка масштабов осей, чтобы все точки были видны
plt.xlim(min(T) - 1, max(T) + 1)  # Добавляем запас к осям
plt.ylim(min(P_kPa) - 0.5, max(P_kPa) + 0.5)

plt.xlabel("Температура T, °C")
plt.ylabel("Давление P, кПа")
plt.title("Зависимость P от T с учетом погрешностей")
plt.grid(True, linestyle="--", alpha=0.7)
plt.legend()
plt.tight_layout()

# Сохранение графика 1
plt.savefig("images/graph1.png", dpi=300)
plt.close()

# График 2: ln(P) от 1/T_K с погрешностями
plt.figure(figsize=(8, 6))

# Переименование осей
inv_T_K_1en3K = inv_T_K * 1e3
d_inv_T_K_1en3K = d_inv_T_K * 1e3

# Подбор линейной регрессии (мнк) для ln(P) от 1/T_K
coeffs = np.polyfit(inv_T_K_1en3K, lnP, 1)  # Коэффициенты прямой (угловой и свободный)
slope = coeffs[0]  # Угловой коэффициент
intercept = coeffs[1]  # Свободный член

plt.errorbar(inv_T_K_1en3K, lnP, xerr=d_inv_T_K_1en3K, yerr=d_lnP, fmt='o', markersize=6, ecolor='blue', capsize=3, label="Экспериментальные данные")

# Линия, полученная методом наименьших квадратов
plt.plot(inv_T_K_1en3K, np.polyval(coeffs, inv_T_K_1en3K), 'r--', label=f"Линия МНК: $y = {slope:.3f}x + {intercept:.3f}$")

# Установка масштабов осей
plt.xlim(min(inv_T_K_1en3K) - 0.01, max(inv_T_K_1en3K) + 0.01)
plt.ylim(min(lnP) - 0.05, max(lnP) + 0.05)

plt.xlabel("Обратная температура 1/T_K, $10^{-3}$ 1/K")
plt.ylabel("Логарифм давления ln(P), 1")
plt.title("Зависимость ln(P) от 1/T_K с учетом погрешностей")
plt.grid(True, linestyle="--", alpha=0.7)
plt.legend()
plt.tight_layout()

# Сохранение графика 2
plt.savefig("images/graph2.png", dpi=300)
plt.close()

# Вывод углового коэффициента
print(f"Угловой коэффициент (slope) линии МНК: {slope:.3f}")

# Данные из таблицы
L = [53, 49, 58, 51, 43.2, 42.400, 42.300, 43.300, 45.500, 
            31.800, 36.700, 44.000, 38.300, 49.400, 41.200, 34.300, 50.000, 46.000, 32.900]
dL = [3.000, 2.000, 2.000, 1.000, 1.100, 1.100, 1.100, 0.900, 0.500, 0.300, 0.400, 0.600, 
             0.500, 0.700, 0.600, 0.600, 0.800, 0.600, 0.400]
T = np.array([294.16, 295.21, 296.18, 297.15, 298.18, 299.15, 300.15, 301.17, 302.16, 
              303.18, 304.16, 305.21, 306.18, 307.18, 308.16, 309.14, 310.16, 311.15, 312.16])
dT = 0.03
# Построение графика с погрешностями
plt.figure(figsize=(8, 6))
plt.errorbar(T, L, xerr=dT, yerr=dL, fmt='o', color='b', ecolor='r', capsize=3, label=r'$L(T)$')

# Подписи осей и заголовок
plt.xlabel("Температура $T$, K")
plt.ylabel("Молярная теплота испарения $L$, кДж/моль")
plt.title("Зависимость $L(T)$ с учётом погрешностей")
plt.legend()
plt.grid(True, linestyle='--', alpha=0.7)
plt.tight_layout()

# Показать график
plt.savefig("images/graph3.png")